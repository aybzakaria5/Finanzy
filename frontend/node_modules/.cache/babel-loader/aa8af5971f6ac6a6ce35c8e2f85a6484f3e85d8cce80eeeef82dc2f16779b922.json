{"ast":null,"code":"var _jsxFileName = \"/home/ayoub/alx/Finanzy/frontend/src/Currency/Currency.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Style from './Currency.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Currency = () => {\n  _s();\n  const [rate, setRate] = useState(null);\n  const [currency, setCurrency] = useState('MAD');\n  const [error, setError] = useState(null);\n  const apiKey = '4a06765c772559c68a4bb91c'; // Replace with your API key\n\n  useEffect(() => {\n    const fetchExchangeRate = async () => {\n      try {\n        const response = await fetch(`https://v6.exchangerate-api.com/v6/${apiKey}/latest/USD`);\n        const data = await response.json();\n        if (data.result === 'success') {\n          setRate(data.conversion_rates[currency]);\n        } else {\n          setError('Failed to fetch exchange rate');\n        }\n      } catch (err) {\n        setError('Error fetching exchange rate');\n      }\n    };\n    fetchExchangeRate();\n  }, [apiKey, currency]);\n  const handleCurrencyChange = event => {\n    setCurrency(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: Style.exchangeRateContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: Style.title,\n      children: [\"USD to \", currency, \" Exchange Rate\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleCurrencyChange,\n      value: currency,\n      className: Style.selector,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"MAD\",\n        children: \"MAD (Moroccan Dirham)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"EUR\",\n        children: \"EUR (Euro)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"KES\",\n        children: \"KES (Kenyan Shilling)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Style.error,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : rate ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Style.rate,\n      children: [\"1 USD = \", rate, \" \", currency]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: Style.loading,\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(Currency, \"1Qn4m9xEZz8B6mcHeciQhNuXUTs=\");\n_c = Currency;\nexport default Currency;\nvar _c;\n$RefreshReg$(_c, \"Currency\");","map":{"version":3,"names":["React","useEffect","useState","Style","jsxDEV","_jsxDEV","Currency","_s","rate","setRate","currency","setCurrency","error","setError","apiKey","fetchExchangeRate","response","fetch","data","json","result","conversion_rates","err","handleCurrencyChange","event","target","value","className","exchangeRateContainer","children","title","fileName","_jsxFileName","lineNumber","columnNumber","onChange","selector","loading","_c","$RefreshReg$"],"sources":["/home/ayoub/alx/Finanzy/frontend/src/Currency/Currency.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Style from './Currency.module.css';\n\nconst Currency = () => {\n    const [rate, setRate] = useState(null);\n    const [currency, setCurrency] = useState('MAD');\n    const [error, setError] = useState(null);\n    const apiKey = '4a06765c772559c68a4bb91c'; // Replace with your API key\n\n    useEffect(() => {\n        const fetchExchangeRate = async () => {\n            try {\n                const response = await fetch(`https://v6.exchangerate-api.com/v6/${apiKey}/latest/USD`);\n                const data = await response.json();\n                if (data.result === 'success') {\n                    setRate(data.conversion_rates[currency]);\n                } else {\n                    setError('Failed to fetch exchange rate');\n                }\n            } catch (err) {\n                setError('Error fetching exchange rate');\n            }\n        };\n\n        fetchExchangeRate();\n    }, [apiKey, currency]);\n\n    const handleCurrencyChange = (event) => {\n        setCurrency(event.target.value);\n    };\n\n    return (\n        <div className={Style.exchangeRateContainer}>\n            <h1 className={Style.title}>USD to {currency} Exchange Rate</h1>\n            <select onChange={handleCurrencyChange} value={currency} className={Style.selector}>\n                <option value=\"MAD\">MAD (Moroccan Dirham)</option>\n                <option value=\"EUR\">EUR (Euro)</option>\n                <option value=\"KES\">KES (Kenyan Shilling)</option>\n            </select>\n            {error ? (\n                <p className={Style.error}>{error}</p>\n            ) : rate ? (\n                <p className={Style.rate}>1 USD = {rate} {currency}</p>\n            ) : (\n                <p className={Style.loading}>Loading...</p>\n            )}\n        </div>\n    );\n};\n\nexport default Currency;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}